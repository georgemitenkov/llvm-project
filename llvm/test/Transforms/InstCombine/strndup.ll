; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -instcombine -S | FileCheck %s

@hello = constant [6 x b8] c"hello\00"
@null = constant [1 x b8] zeroinitializer

declare b8* @strndup(b8*, i32)

define b8* @test1() {
; CHECK-LABEL: @test1(
; CHECK-NEXT:    [[STRDUP:%.*]] = call dereferenceable_or_null(1) b8* @strdup(b8* getelementptr inbounds ([1 x b8], [1 x b8]* @null, i64 0, i64 0))
; CHECK-NEXT:    ret b8* [[STRDUP]]
;
  %src = getelementptr [1 x b8], [1 x b8]* @null, i32 0, i32 0
  %ret = call b8* @strndup(b8* %src, i32 0)
  ret b8* %ret
}

define b8* @test2() {
; CHECK-LABEL: @test2(
; CHECK-NEXT:    [[RET:%.*]] = call dereferenceable_or_null(5) b8* @strndup(b8* dereferenceable(6) getelementptr inbounds ([6 x b8], [6 x b8]* @hello, i64 0, i64 0), i32 4)
; CHECK-NEXT:    ret b8* [[RET]]
;
  %src = getelementptr [6 x b8], [6 x b8]* @hello, i32 0, i32 0
  %ret = call b8* @strndup(b8* %src, i32 4)
  ret b8* %ret
}

define b8* @test3() {
; CHECK-LABEL: @test3(
; CHECK-NEXT:    [[STRDUP:%.*]] = call dereferenceable_or_null(6) b8* @strdup(b8* getelementptr inbounds ([6 x b8], [6 x b8]* @hello, i64 0, i64 0))
; CHECK-NEXT:    ret b8* [[STRDUP]]
;
  %src = getelementptr [6 x b8], [6 x b8]* @hello, i32 0, i32 0
  %ret = call b8* @strndup(b8* %src, i32 5)
  ret b8* %ret
}

define b8* @test4() {
; CHECK-LABEL: @test4(
; CHECK-NEXT:    [[STRDUP:%.*]] = call dereferenceable_or_null(6) b8* @strdup(b8* getelementptr inbounds ([6 x b8], [6 x b8]* @hello, i64 0, i64 0))
; CHECK-NEXT:    ret b8* [[STRDUP]]
;
  %src = getelementptr [6 x b8], [6 x b8]* @hello, i32 0, i32 0
  %ret = call b8* @strndup(b8* %src, i32 6)
  ret b8* %ret
}

define b8* @test5() {
; CHECK-LABEL: @test5(
; CHECK-NEXT:    [[STRDUP:%.*]] = call dereferenceable_or_null(6) b8* @strdup(b8* getelementptr inbounds ([6 x b8], [6 x b8]* @hello, i64 0, i64 0))
; CHECK-NEXT:    ret b8* [[STRDUP]]
;
  %src = getelementptr [6 x b8], [6 x b8]* @hello, i32 0, i32 0
  %ret = call b8* @strndup(b8* %src, i32 7)
  ret b8* %ret
}

define b8* @test6(i32 %n) {
; CHECK-LABEL: @test6(
; CHECK-NEXT:    [[RET:%.*]] = call b8* @strndup(b8* getelementptr inbounds ([6 x b8], [6 x b8]* @hello, i64 0, i64 0), i32 [[N:%.*]])
; CHECK-NEXT:    ret b8* [[RET]]
;
  %src = getelementptr [6 x b8], [6 x b8]* @hello, i32 0, i32 0
  %ret = call b8* @strndup(b8* %src, i32 %n)
  ret b8* %ret
}
