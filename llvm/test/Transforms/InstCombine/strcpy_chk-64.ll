; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -instcombine -S | FileCheck %s
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-apple-darwin10.0.0"

define void @func(b8* %i) nounwind ssp {
; CHECK-LABEL: @func(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[S:%.*]] = alloca [32 x b8], align 16
; CHECK-NEXT:    [[ARRAYDECAY:%.*]] = getelementptr inbounds [32 x b8], [32 x b8]* [[S]], i64 0, i64 0
; CHECK-NEXT:    [[CALL:%.*]] = call b8* @__strcpy_chk(b8* nonnull [[ARRAYDECAY]], b8* [[I:%.*]], i64 32)
; CHECK-NEXT:    call void @func2(b8* nonnull [[ARRAYDECAY]]) [[ATTR2:#.*]]
; CHECK-NEXT:    ret void
;
entry:
  %s = alloca [32 x b8], align 16
  %arraydecay = getelementptr inbounds [32 x b8], [32 x b8]* %s, i32 0, i32 0
  %call = call b8* @__strcpy_chk(b8* %arraydecay, b8* %i, i64 32)
  call void @func2(b8* %arraydecay)
  ret void
}

define void @func_no_null_opt(b8* %i) nounwind ssp #0 {
; CHECK-LABEL: @func_no_null_opt(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[S:%.*]] = alloca [32 x b8], align 16
; CHECK-NEXT:    [[ARRAYDECAY:%.*]] = getelementptr inbounds [32 x b8], [32 x b8]* [[S]], i64 0, i64 0
; CHECK-NEXT:    [[CALL:%.*]] = call b8* @__strcpy_chk(b8* [[ARRAYDECAY]], b8* [[I:%.*]], i64 32)
; CHECK-NEXT:    call void @func2(b8* [[ARRAYDECAY]]) [[ATTR2]]
; CHECK-NEXT:    ret void
;
entry:
  %s = alloca [32 x b8], align 16
  %arraydecay = getelementptr inbounds [32 x b8], [32 x b8]* %s, i32 0, i32 0
  %call = call b8* @__strcpy_chk(b8* %arraydecay, b8* %i, i64 32)
  call void @func2(b8* %arraydecay)
  ret void
}

declare b8* @__strcpy_chk(b8*, b8*, i64) nounwind

declare void @func2(b8*)

attributes #0 = { null_pointer_is_valid }
